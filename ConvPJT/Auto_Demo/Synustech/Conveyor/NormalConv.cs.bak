using System;
using System.Threading;
using static Synustech.G_Var;

namespace Synustech
{
    internal class LongConv : Conveyor
    {
        /// <summary>
        /// Init동작 함수
        /// </summary>
        public override void Init()
        {
            InitComp = false;
            Thread InitThread = new Thread(() =>
            {
                Console.WriteLine(ID + ": Init Start");
                while (IsMainForm && (IsAutoRun || IsCycleRun) && !InitComp)
                {
                    switch (CV_InitStep)
                    {
                        case InitStep.Step000_Foup_Check:
                            {
                                LCV_Inmode_CST_Check_Detect();
                                if (LCnVCSTBoth)
                                {
                                    CV_InitStep = InitStep.Step500_Init_Done;
                                }
                                else
                                {
                                    CV_InitStep = InitStep.Step100_Move;
                                }
                            }
                            break;

                        case InitStep.Step100_Move:
                            {
                                StartConveyor(Init_Velocity);

                                int elapsed = 0;
                                while (IsMainForm && (IsAutoRun || IsCycleRun) && !InitComp && elapsed < 5000)
                                {
                                    LCV_Inmode_CST_Check_Detect();
                                    if (LCnVCSTBoth)
                                    {
                                        break;
                                    }
                                    Thread.Sleep(100);
                                    elapsed += 100;
                                }
                                StopConveyor();
                                CV_InitStep = InitStep.Step500_Init_Done;
                            }
                            break;

                        case InitStep.Step500_Init_Done:
                            {
                                InitComp = true;
                            }
                            break;

                        default:
                            {
                                CV_InitStep = InitStep.Step000_Foup_Check;
                            }
                            break;
                    }
                    Thread.Sleep(10);
                }
                Console.WriteLine(ID + " : Init Stop");
            });
            InitThread.Start();
        }
        /// <summary>
        /// Auto 공정 함수
        /// </summary>
        public override void Auto_Start_CV_Control()
        {
            mode = Mode.Auto;
            InmodeConvCheck();
            portDirection = LineDirection.Input;
            CV_AutoStep = AutoStep.Step000_Check_Direction;
            bool modechange = IsInput;
            Thread LocalThread = new Thread(() =>
            {
                Console.WriteLine(ID + ":" + "Auto Start");
                while (IsMainForm && (G_Var.IsAutoRun || G_Var.IsCycleRun) && (NCV_AutoRunning || NCV_CycleRunning))
                {
                    if (modechange != IsInput)
                    {
                        if (IsInput)
                        {
                            portDirection = LineDirection.Input;
                        }
                        else
                        {
                            {
                                portDirection = LineDirection.Output;
                            }
                        }
                        CV_AutoStep = AutoStep.Step000_Check_Direction;
                        modechange = IsInput;
                    }
                    switch (CV_AutoStep)
                    {

                        /// <summary>
                        /// 1. 운영 방향과 운전 방향 확인
                        /// </summary>
                        case AutoStep.Step000_Check_Direction:
                            {
                                if (GetOperationDirection() == LineDirection.Input)
                                {
                                    CV_AutoStep = AutoStep.Step100_InMode_Check_CST_Load_Status;
                                }

                                else
                                {
                                    CV_AutoStep = AutoStep.Step300_OutMode_Check_CST_Load_Status;
                                }
                            }
                            break;

                        /// <summary>
                        /// 1.현재 자재가 있는지 확인 (자재가 있으면 CSTDetected = true)
                        /// 2.현재 스텝을 IDLE로 판단.
                        /// </summary>
                        case AutoStep.Step100_InMode_Check_CST_Load_Status: // 자재가 있고 앞 컨베이어에도 자재가 있는 경우 추가해야됨
                            {
                                LCnV_CST_Empty_Detect();
                                // 자재가 있는 경우
                                if (LCnvCSTDetected)
                                {
                                    Thread.Sleep(2000);
                                    CV_AutoStep = AutoStep.Step210_InMode_Move_CV_Rolling_In;
                                }
                                // 자재가 없고 이전 컨베이어가 있는 경우
                                else if (beforeconv != null && !LCnvCSTDetected)
                                {
                                    CV_AutoStep = AutoStep.Step500_InMode_Get_CST_Rolling;
                                }
                                Console.WriteLine(CV_AutoStep);
                            }
                            break;

                        /// <summary>
                        /// 1. 자재 ID를 읽을 준비를 하는 스텝, 추후 추가시 주석해제 수정 필요.
                        /// </summary>
                        //case NORMAL_CV_AutoStep.Step200_InMode_Start_CST_Pass_From_CV:
                        //    {
                        //        // 이전 컨베이어에서 자재를 받을 수 있는 상태 확인
                        //        if (Carrier_CheckLP_ExistProduct(true))
                        //        {
                        //            // 자재 ID 읽기 준비
                        //            CV_AutoStep = NORMAL_CV_AutoStep.Step210_InMode_Move_CV_Rolling;
                        //        }
                        //        else
                        //        {
                        //            
                        //        }
                        //    }
                        //    break;

                        /// <summary>
                        /// 1. 컨베어구동 동작 진행
                        /// </summary>
                        case AutoStep.Step210_InMode_Move_CV_Rolling_In:
                            {
                                // 컨베이어 구동
                                StartConveyor(AutoVelocity);
                                if(beforeconv != null)
                                {
                                    // 이전 컨베이어 타입에 따라 분류
                                    if(beforeconv.type == "Long")
                                    {
                                        beforeconv.LCnV_CST_Empty_Detect();
                                        // 이전 컨베이어의 Foup 감지 센서가 모두 Off면 동작
                                        if (!beforeconv.LCnvCSTDetected)
                                        {
                                            CV_AutoStep = AutoStep.Step215_InMode_Move_CV_Slow;
                                        }
                                    }
                                    else
                                    {
                                        beforeconv.CST_Empty_Detect();
                                        // 이전 컨베이어의 Foup 감지 센서가 모두 Off면 동작
                                        if (!beforeconv.SCnvCSTDetected)
                                        {
                                            CV_AutoStep = AutoStep.Step215_InMode_Move_CV_Slow;
                                        }
                                    }
                                }
                                // 이전 컨베이어가 없는 경우 (시작 컨베이어)
                                else
                                {
                                    CV_AutoStep = AutoStep.Step220_InMode_Run_Condition_Check;
                                }

                            }
                            break;

                        /// <summary>
                        /// 1. 앞 Conv에 Foup 존재 시 속도 줄임
                        /// </summary
                        case AutoStep.Step215_InMode_Move_CV_Slow:
                            {
                                if (LCnvFoupDetect[0] == SensorOnOff.On && LCnvFoupDetect[1] == SensorOnOff.Off && LCnvFoupDetect[2] == SensorOnOff.On)
                                {
                                    if (nextconv != null)
                                    {
                                        // 이전 컨베이어의 타입에 따라 분류
                                        if (beforeconv.type == "Long")
                                        {
                                            // 다음 컨베이어에 타입에 따라 분류
                                            if (nextconv.type == "Long")
                                            {
                                                nextconv.LCnV_CST_Empty_Detect();
                                                // 다음 컨베이어에 Foup이 있다면 저속
                                                if (nextconv.LCnvCSTDetected)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }
                                            else if (nextconv.type == "Normal")
                                            {
                                                nextconv.CST_Empty_Detect();
                                                if (nextconv.SCnvCSTDetected)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }
                                            else if (nextconv.type == "Turn")
                                            {
                                                if (nextconv.turnstatus != TurnStatus.Load)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }

                                        }
                                        else
                                        {
                                            // 다음 컨베이어에 타입에 따라 분류
                                            if (nextconv.type == "Long")
                                            {
                                                nextconv.LCnV_CST_Empty_Detect();
                                                // 다음 컨베이어에 Foup이 있다면 저속
                                                if (nextconv.LCnvCSTDetected)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }
                                            else if (nextconv.type == "Normal")
                                            {
                                                nextconv.CST_Empty_Detect();
                                                if (nextconv.SCnvCSTDetected)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }
                                            else if (nextconv.type == "Turn")
                                            {
                                                if (nextconv.turnstatus != TurnStatus.Load)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }

                                        }
                                        CV_AutoStep = AutoStep.Step220_InMode_Run_Condition_Check;
                                    }
                                    // 다음 컨베이어가 없는 경우 (마지막 컨베이어인 경우)
                                    else if (nextconv == null)
                                    {
                                        StartConveyor(SlowVelocity);
                                        CV_AutoStep = AutoStep.Step220_InMode_Run_Condition_Check;
                                    }
                                    // 이전 컨베이어가 없는 경우 (시작 컨베이어)
                                    else if (beforeconv == null)
                                    {
                                        CV_AutoStep = AutoStep.Step220_InMode_Run_Condition_Check;
                                    }
                                }
                            }
                            break;
                        /// <summary>
                        /// 1. Foup Detect센서가 모두 감지됐을 때 조건 확인
                        /// </summary>
                        case AutoStep.Step220_InMode_Run_Condition_Check:
                            {
                                LCV_Inmode_CST_Check_Detect();
                                // 마지막 컨베이어가 아닌 경우
                                if (nextconv != null && LCnVCSTBoth)
                                {
                                    // 다음 컨베이어가 Turn 컨베이어인 경우
                                    if (nextconv.type == "Turn")
                                    {
                                        // 다음 컨베이어가 Load 상태가 아닐 경우 정지
                                        if (nextconv.turnstatus != TurnStatus.Load)
                                        {
                                            StopConveyor();
                                            CV_AutoStep = AutoStep.Step270_InMode_Move_CST_Pass_CV_to_TCV;
                                        }
                                        // Load 상태일 경우
                                        else
                                        {
                                            StartConveyor(AutoVelocity);
                                            CV_AutoStep = AutoStep.Step250_InMode_Move_CV_Rolling_Out;
                                        }
                                    }
                                    // 다음 컨베이어가 Trun 컨베이어가 아닌 경우
                                    else if (nextconv.type == "Normal")
                                    {
                                        nextconv.CST_Empty_Detect();
                                        // 다음 컨베이어에 Foup이 없는 경우
                                        if (!nextconv.SCnvCSTDetected)
                                        {
                                            CV_AutoStep = AutoStep.Step250_InMode_Move_CV_Rolling_Out;
                                        }
                                        // 다음 컨베이어에 Foup이 있는 경우 정지
                                        else
                                        {
                                            StopConveyor();
                                            CV_AutoStep = AutoStep.Step255_InMode_Wait_NextConv;
                                        }
                                    }
                                    // 다음 컨베이어가 Long 컨베이어인 경우
                                    else if (nextconv.type == "Long")
                                    {
                                        nextconv.LCnV_CST_Empty_Detect();
                                        // 다음 컨베이어에 Foup이 없는 경우
                                        if (!nextconv.LCnvCSTDetected)
                                        {
                                            CV_AutoStep = AutoStep.Step250_InMode_Move_CV_Rolling_Out;
                                        }
                                        // 다음 컨베이어에 Foup이 있는 경우 정지
                                        else
                                        {
                                            StopConveyor();
                                            CV_AutoStep = AutoStep.Step255_InMode_Wait_NextConv;
                                        }
                                    }
                                }
                                // 마지막 컨베이어인 경우 정지
                                else if (nextconv == null && LCnVCSTBoth)
                                {

                                    StopConveyor();
                                    CV_AutoStep = AutoStep.Step900_Final_CV_Wait;
                                }
                            }
                            break;

                        /// <summary>
                        /// 1. Foup이 빠져나가면 Step 초기화
                        /// </summary>
                        case AutoStep.Step250_InMode_Move_CV_Rolling_Out:
                            {
                                // 마지막 Foup 감지 센서가 꺼진 경우 0.1초 후 정지 - 시간 조정
                                if (!LCV_Inmode_LastFoup_Detect_Check())
                                {
                                    Thread.Sleep(100);
                                    StopConveyor();
                                    CV_AutoStep = AutoStep.Step000_Check_Direction;
                                }
                            }
                            break;

                        /// <summary>
                        /// 1. Next Conveyor가 Foup을 Load하지 못하는 경우 대기
                        /// </summary>
                        case AutoStep.Step255_InMode_Wait_NextConv:
                            {
                                // 다음 컨베이어의 타입에 따라 분류
                                if (nextconv.type == "Normal")
                                {
                                    nextconv.CST_Empty_Detect();
                                    // 다음 컨베이어가 비어 있는 경우 2초 후 동작 - 시간 조정
                                    if (!nextconv.SCnvCSTDetected)
                                    {
                                        Thread.Sleep(2000);
                                        StartConveyor(AutoVelocity);
                                        CV_AutoStep = AutoStep.Step250_InMode_Move_CV_Rolling_Out;
                                    }
                                }
                                else if (nextconv.type == "Long")
                                {
                                    nextconv.LCnV_CST_Empty_Detect();
                                    // 다음 컨베이어가 비어 있는 경우 2초 후 동작 - 시간 조정
                                    if (!nextconv.LCnvCSTDetected)
                                    {
                                        Thread.Sleep(2000);
                                        StartConveyor(AutoVelocity);
                                        CV_AutoStep = AutoStep.Step250_InMode_Move_CV_Rolling_Out;
                                    }
                                }
                                //Thread.Sleep(10);
                            }
                            break;

                        /// <summary>
                        /// 1. 앞 Turn Conveyor가 Busy인 경우 Load 상태가 될 때 까지 대기
                        /// </summary>
                        case AutoStep.Step270_InMode_Move_CST_Pass_CV_to_TCV:
                            {
                                // 다음 Turn 컨베이어가 Load 상태인 경우 2초 후 동작 - 시간 조정
                                if (nextconv.turnstatus == TurnStatus.Load)
                                {
                                    Thread.Sleep(2000);
                                    StartConveyor(AutoVelocity);
                                    CV_AutoStep = AutoStep.Step250_InMode_Move_CV_Rolling_Out;
                                }
                            }
                            break;

                        /// <summary>
                        /// 1. 물체가 감지되면 Step210으로 변경
                        /// </summary>
                        case AutoStep.Step275_InMode_Change_210:
                            {
                                LCnV_CST_Empty_Detect();
                                if (LCnvCSTDetected)
                                {
                                    CV_AutoStep = AutoStep.Step210_InMode_Move_CV_Rolling_In;
                                }
                            }
                            break;

                        case AutoStep.Step300_OutMode_Check_CST_Load_Status:
                            {
                                LCnV_CST_Empty_Detect();
                                if (LCnvCSTDetected)
                                {
                                    Thread.Sleep(2000);
                                    CV_AutoStep = AutoStep.Step410_OutMode_Move_CV_Rolling_out;
                                }
                                else if(nextconv != null & !LCnvCSTDetected)
                                {
                                    CV_AutoStep = AutoStep.Step600_OutMode_Get_CST_Rolling;
                                }
                            }
                            break;

                        case AutoStep.Step410_OutMode_Move_CV_Rolling_out:
                            {
                                StartConveyor(AutoVelocity);
                                if(nextconv != null)
                                {
                                    if(nextconv.type == "Long")
                                    {
                                        nextconv.LCnV_CST_Empty_Detect();
                                        if (!nextconv.LCnvCSTDetected)
                                        {
                                            CV_AutoStep = AutoStep.Step415_OutMode_Move_CV_Slow;
                                        }
                                    }
                                    else
                                    {
                                        nextconv.CST_Empty_Detect();
                                        if (!nextconv.SCnvCSTDetected)
                                        {
                                            CV_AutoStep = AutoStep.Step415_OutMode_Move_CV_Slow;
                                        }
                                    }
                                }
                                else
                                {
                                    CV_AutoStep = AutoStep.Step420_OutMode_Run_Condition_Check;
                                }
                            }
                            break;

                        case AutoStep.Step415_OutMode_Move_CV_Slow:
                            {
                                if (LCnvFoupDetect[0] == SensorOnOff.On && LCnvFoupDetect[1] == SensorOnOff.Off && LCnvFoupDetect[2] == SensorOnOff.On)
                                {
                                    if(beforeconv != null)
                                    {
                                        if(nextconv.type == "Long")
                                        {
                                            if(beforeconv.type == "Long")
                                            {
                                                beforeconv.LCnV_CST_Empty_Detect();
                                                if (beforeconv.LCnvCSTDetected)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }
                                            else if (beforeconv.type == "Normal")
                                            {
                                                beforeconv.CST_Empty_Detect();
                                                if (beforeconv.SCnvCSTDetected)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }
                                            else if (beforeconv.type == "Turn")
                                            {
                                                if (beforeconv.turnstatus != TurnStatus.Load)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if(beforeconv.type == "Long")
                                            {
                                                beforeconv.LCnV_CST_Empty_Detect();
                                                if (beforeconv.LCnvCSTDetected)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }
                                            else if (beforeconv.type == "Normal")
                                            {
                                                beforeconv.CST_Empty_Detect();
                                                if (beforeconv.SCnvCSTDetected)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }
                                            else if (beforeconv.type == "Turn")
                                            {
                                                if (beforeconv.turnstatus != TurnStatus.Load)
                                                {
                                                    StartConveyor(SlowVelocity);
                                                }
                                            }
                                        }
                                        CV_AutoStep = AutoStep.Step420_OutMode_Run_Condition_Check;
                                    }
                                    else if(beforeconv == null)
                                    {
                                        StartConveyor(SlowVelocity);
                                        CV_AutoStep = AutoStep.Step420_OutMode_Run_Condition_Check;
                                    }
                                    else if(nextconv == null)
                                    {
                                        CV_AutoStep = AutoStep.Step420_OutMode_Run_Condition_Check;
                                    }
                                }
                            }
                            break;

                        case AutoStep.Step420_OutMode_Run_Condition_Check:
                            {
                                LCV_Outmode_CST_Check_Detect();
                                if(beforeconv != null && LCnVCSTBoth)
                                {
                                    if(beforeconv.type == "Turn")
                                    {
                                        if(beforeconv.turnstatus != TurnStatus.Load)
                                        {
                                            StopConveyor();
                                            CV_AutoStep = AutoStep.Step470_OutMode_Move_CST_Pass_CV_to_TCV;
                                        }
                                        else
                                        {
                                            StartConveyor(AutoVelocity);
                                            CV_AutoStep = AutoStep.Step450_OutMode_Move_CV_Rolling_Out;
                                        }
                                    }
                                    else if(beforeconv.type == "Normal")
                                    {
                                        beforeconv.CST_Empty_Detect();
                                        if (!beforeconv.SCnvCSTDetected)
                                        {
                                            CV_AutoStep = AutoStep.Step450_OutMode_Move_CV_Rolling_Out;
                                        }
                                        else
                                        {
                                            StopConveyor();
                                            CV_AutoStep = AutoStep.Step455_OutMode_Wait_NextConv;
                                        }
                                    }
                                    else if(beforeconv.type == "Long")
                                    {
                                        beforeconv.LCnV_CST_Empty_Detect();
                                        if (!beforeconv.LCnvCSTDetected)
                                        {
                                            CV_AutoStep = AutoStep.Step450_OutMode_Move_CV_Rolling_Out;
                                        }
                                        else
                                        {
                                            StopConveyor();
                                            CV_AutoStep = AutoStep.Step455_OutMode_Wait_NextConv;
                                        }
                                    }
                                }
                                else if(beforeconv == null && LCnVCSTBoth)
                                {
                                    StopConveyor();
                                    CV_AutoStep = AutoStep.Step900_Final_CV_Wait;
                                }
                            }
                            break;

                        case AutoStep.Step450_OutMode_Move_CV_Rolling_Out:
                            {
                                if (!LCV_Outmode_LastFoup_Detect_Check())
                                {
                                    Thread.Sleep(100);
                                    StopConveyor();
                                    CV_AutoStep = AutoStep.Step000_Check_Direction;
                                }
                            }
                            break;

                        case AutoStep.Step455_OutMode_Wait_NextConv:
                            {
                                if(beforeconv.type == "Normal")
                                {
                                    beforeconv.CST_Empty_Detect();
                                    if (!beforeconv.SCnvCSTDetected)
                                    {
                                        Thread.Sleep(2000);
                                        StartConveyor(AutoVelocity);
                                        CV_AutoStep = AutoStep.Step450_OutMode_Move_CV_Rolling_Out;
                                    }
                                }
                                else if(beforeconv.type == "Long")
                                {
                                    beforeconv.LCnV_CST_Empty_Detect();
                                    if (!beforeconv.SCnvCSTDetected)
                                    {
                                        Thread.Sleep(2000);
                                        StartConveyor(AutoVelocity);
                                        CV_AutoStep = AutoStep.Step450_OutMode_Move_CV_Rolling_Out;
                                    }
                                }
                            }
                            break;

                        case AutoStep.Step470_OutMode_Move_CST_Pass_CV_to_TCV:
                            {
                                if(beforeconv.turnstatus == TurnStatus.Load)
                                {
                                    Thread.Sleep(2000);
                                    StartConveyor(AutoVelocity);
                                    CV_AutoStep = AutoStep.Step450_OutMode_Move_CV_Rolling_Out;
                                }
                            }
                            break;

                        case AutoStep.Step475_OutMode_Change_410:
                            {
                                LCnV_CST_Empty_Detect();
                                if (LCnvCSTDetected)
                                {
                                    CV_AutoStep = AutoStep.Step410_OutMode_Move_CV_Rolling_out;
                                }
                            }
                            break;

                        /// <summary>
                        /// 1. 이전 Conveyor에 Foup이 적재되면 구동
                        /// </summary>
                        case AutoStep.Step500_InMode_Get_CST_Rolling:
                            {
                                // 이전 컨베이어의 타입이 Turn인 경우
                                if (beforeconv.type == "Turn")
                                {
                                    Thread.Sleep(10);
                                    // 이전 컨베이어의 상태가 Unload인 경우 동작
                                    if (beforeconv.turnstatus == TurnStatus.Unload)
                                    {
                                        StartConveyor(AutoVelocity);
                                        CV_AutoStep = AutoStep.Step275_InMode_Change_210;
                                    }
                                }
                                // 이전 컨베이어의 타입이 Turn이 아닌 경우 이전 컨베이어의 AutoStep Check 후 동작
                                else if (beforeconv.CV_AutoStep == AutoStep.Step220_InMode_Run_Condition_Check ||
                                beforeconv.CV_AutoStep == AutoStep.Step255_InMode_Wait_NextConv)
                                {
                                    StartConveyor(AutoVelocity);
                                    CV_AutoStep = AutoStep.Step275_InMode_Change_210;
                                }
                            }
                            break;

                        case AutoStep.Step600_OutMode_Get_CST_Rolling:
                            {
                                if(nextconv.type == "Turn")
                                {
                                    Thread.Sleep(10);
                                    if (nextconv.turnstatus == TurnStatus.Unload)
                                    {
                                        StartConveyor(AutoVelocity);
                                        CV_AutoStep = AutoStep.Step475_OutMode_Change_410;
                                    }
                                }
                                else if(nextconv.CV_AutoStep == AutoStep.Step420_OutMode_Run_Condition_Check ||
                                nextconv.CV_AutoStep == AutoStep.Step455_OutMode_Wait_NextConv)
                                {
                                    StartConveyor(AutoVelocity);
                                    CV_AutoStep = AutoStep.Step475_OutMode_Change_410;
                                }
                            }
                            break;

                        /// <summary>
                        /// 1. 마지막 Conveyor인 경우 물체가 Unload 될 때 까지 대기
                        /// </summary>
                        case AutoStep.Step900_Final_CV_Wait:
                            {
                                if (IsCycleRun)
                                {
                                    if (lines[0].IdleCheck())
                                    {
                                        if (CurrentCycle >= TargetCycle || CycleStop)
                                        {
                                            CurrentCycle = 0;
                                            TargetCycle = 0;
                                            IsCycleRun = false;
                                            lines[0].EndTime = DateTime.Now;
                                        }
                                        else
                                        {
                                            CurrentCycle++;
                                            Console.WriteLine(CurrentCycle);
                                            lines[0].ChangeMode(portDirection);
                                            Thread.Sleep(300);
                                            lines[0].ChangeStep();
                                        }
                                    }
                                }
                                else
                                {
                                    LCnV_CST_Empty_Detect();
                                    // Foup이 없어진 경우 Auto Step 초기화
                                    if (!LCnvCSTDetected)
                                    {
                                        CV_AutoStep = AutoStep.Step000_Check_Direction;
                                    }
                                }
                            }
                            break;

                        default:
                            break;

                    }
                    if (prestep != CV_AutoStep)
                    {
                        Console.WriteLine(ID + ":" + CV_AutoStep);
                        prestep = CV_AutoStep;
                    }
                    Thread.Sleep(10); // CPU 사용량 감소를 위한 대기
                }
                Console.WriteLine(ID + ":" + "Auto Stop");
                StopConveyor();
                mode = Mode.Manual;
                NCV_AutoRunning = false;
                NCV_CycleRunning = false;
                G_Var.IsAutoRun = false;
                G_Var.IsCycleRun = false;
            });
            LocalThread.Start();
        }
        private int Auto_CV_Get_StepNum()
        {
            return (int)CV_AutoStep;
        }
        public LongConv(int id, int axis, bool Isinterface) : base(id, axis, Isinterface)
        {
            type = "Long";
            bits.Add(2);
            bits.Add(6);
            bits.Add(3);
        }
    }
}
